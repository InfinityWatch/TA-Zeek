###########
# PARSING #
###########
[TrashComments]
REGEX = ^\s*#
DEST_KEY = queue
FORMAT = nullQueue

[ZeekAutoTypeJSON]
DEST_KEY = MetaData:Sourcetype
SOURCE_KEY = MetaData:Source
REGEX = (?:[a-zA-Z0-9_]+\.)?([a-zA-Z0-9_]+)\.log
FORMAT = sourcetype::zeek:$1:json
WRITE_META = true

# Dynamic source typing based on log filename
# Match: conn.log, bro.conn.log, 
# md5.bro.conn.log, whatever.conn.log

######################
# FIELD CONVERSIONS  #
######################
[bytes_in_int]
SOURCE_KEY = orig_bytes
REGEX = ([0-9]*)
FORMAT = bytes_in::"$1"

[bytes_out_int]
SOURCE_KEY = resp_bytes
REGEX = ([0-9]+)
FORMAT = bytes_out::"$1"

[bytes_from_file_size_int]
SOURCE_KEY = file_size
REGEX = ([0-9]+)
FORMAT = bytes::"$1"

[bytes_from_resp_size_int]
SOURCE_KEY = resp_size
REGEX = ([0-9]+)
FORMAT = bytes::"$1"

###########
# LOOKUPS #
###########
[LookupConnState]
filename = zeek_conn_state.csv

[LookupTCFlag]
filename = zeek_tc_flag.csv

[bro_protocol_lookup]
filename = zeek_protocols.csv

[bro_action_lookup]
filename = zeek_status_action.csv

[bro_vendor_info_lookup]
filename = zeek_vendor_info.csv
match_type = WILDCARD(sourcetype)

[bro_note_alert_type]
filename = zeek_note_alert_type.csv